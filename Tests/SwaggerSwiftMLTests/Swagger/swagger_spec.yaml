swagger: '2.0'

info:
  version: "0.1.0"
  title: Lunar Way User API
  description: |
    API for user-service.
  termsOfService: Lunar Way internal only
  contact:
    url: 'http://www.lunarway.com'
    email: operations@lunarway.com
  license:
    name: (C) LunarWay 2017
    url: 'http://www.lunarway.com'
consumes:
  - application/json
produces:
  - application/json
  - text/plain
responses:
  InternalError:
    description: Internal server error. Something went wrong in the backend.
    schema:
      $ref: '#/definitions/ErrorViewModel'
  ClientError:
    description: General client error. The request is invalid. The returned error code will contain detailed information on the type of the error.
    schema:
      $ref: '#/definitions/ErrorViewModel'
  NotFound:
    description: The resource was not found.
    schema:
      $ref: '#/definitions/ErrorViewModel'
paths:
  /debug/users:
    get:
      description: Get all users for debug purposes. Not available in other environments
      parameters:
        - $ref: '#/parameters/XLanguage'
        - name: X-AppVersion
          in: header
          description: App version
          required: true
          type: string
        - name: X-Os
          in: header
          description: OS
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/DebugUsersResponse'
        500:
          $ref: '#/responses/InternalError'
  /user:
    get:
      description: Get the user containing the user view model
      parameters:
        - $ref: '#/parameters/XLanguage'
        - name: X-AppVersion
          in: header
          description: App version
          required: true
          type: string
        - name: X-Os
          in: header
          description: OS
          required: true
          type: string
      security:
        - authorizationToken: []
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/UserResponse'
        400:
          $ref: '#/responses/ClientError'
        500:
          $ref: '#/responses/InternalError'
  /user/email:
    put:
      description: Update a user's email
      consumes:
        - application/json
      parameters:
        - name: emailUpdate
          in: body
          required: true
          schema:
            $ref: '#/definitions/EmailUpdate'
      security:
        - authorizationToken: []
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/EmailUpdate'
        400:
          $ref: '#/responses/ClientError'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /user/phonenumber:
    put:
      description: Update a user's phonenumber
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/XLanguage'
        - name: phoneNumberUpdate
          in: body
          required: true
          schema:
            $ref: '#/definitions/PhoneNumberUpdate'
      security:
        - authorizationToken: []
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/PhoneNumberUpdate'
        400:
          $ref: '#/responses/ClientError'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /user/contactpermission:
    put:
      description: Update a user's contact permission
      consumes:
        - application/json
      parameters:
        - name: contactPermissionUpdate
          in: body
          required: true
          schema:
            $ref: '#/definitions/ContactPermissionUpdate'
      security:
        - authorizationToken: []
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ContactPermissionUpdate'
        400:
          $ref: '#/responses/ClientError'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /user/avatar:
    put:
      description: Update a user's avatar
      consumes:
        - multipart/form-data
      parameters:
        - name: avatar
          in: formData
          required: true
          type: file
      security:
        - authorizationToken: []
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/AvatarUpdate'
        400:
          $ref: '#/responses/ClientError'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
    delete:
      description: Delete an avatar
      consumes:
        - application/json
      security:
        - authorizationToken: []
      produces:
        - application/json
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/EmptyResponse'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /avatar/{id}:
    get:
      description: Returns avatar from uuid
      parameters:
        - in: path
          name: id
          type: string
          required: true
      security:
        - authorizationToken: []
      responses:
        302:
          description: Redirects to an avatar presigned url with expiration header set to 30 days
          headers:
            Location:
              type: string
            Expires:
              type: string
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /avatar/{id}/thumbnail:
    get:
      description: Returns avatar thumbnail from uuid
      parameters:
        - in: path
          name: id
          type: string
          required: true
      security:
        - authorizationToken: []
      responses:
        302:
          description: Redirects to an avatar thumbnail presigned url with expiration header set to 30 days
          headers:
            Location:
              type: string
            Expires:
              type: string
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /user/{id}/avatar/{updated}:
    get:
      description: Legacy support for redirect to an avatar using userId and updated timestamp
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: path
          name: updated
          type: string
          required: true
      responses:
        302:
          description: Redirects to an avatar thumbnail presigned url with expiration header set to 30 days
          headers:
            Location:
              type: string
            Expires:
              type: string
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
      security:
        - authorizationToken: []
  /user/{id}/avatar/{updated}/thumbnail:
    get:
      description: Legacy support for redirect to an avatar using userId and updated timestamp
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: path
          name: updated
          type: string
          required: true
      security:
        - authorizationToken: []
      responses:
        302:
          description: Redirects to an avatar thumbnail presigned url with expiration header set to 30 days
          headers:
            Location:
              type: string
            Expires:
              type: string
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalError'
  /ping:
    get:
      description: Get a pong
      produces:
        - text/plain
      responses:
        200:
          description: Successful response
          schema:
            type: string
definitions:
  ErrorViewModel:
    description: Error object
    properties:
      message:
        type: string
        description: Message
      reasonDisplayMessage:
        type: string
        description: Display message
      reasonCode:
        type: string
        description: A reason code
  EmptyResponse:
    type: object
  DebugUsersResponse:
    type: object
    properties:
      users:
        type: array
        description: Debug endpoint to get all users
        items:
          $ref: '#/definitions/User'
  UserResponse:
    type: object
    required:
      - id
      - intercomHmac
      - user
    properties:
      user:
        $ref: '#/definitions/User'
      id:
        type: string
        description: Unique userId
      intercomHmac:
        type: string
        description: The Hmac identifying the user in Intercom
      email:
        type: string
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      name:
        $ref: '#/definitions/Name'
      avatar:
        $ref: '#/definitions/Avatar'
  User:
    type: object
    required:
      - id
      - intercomHmac
      - type
      - state
    properties:
      id:
        type: string
        description: Unique userId
      intercomHmac:
        type: string
        description: The Hmac identifying the user in Intercom
      type:
        type: string
        description: Type of user
      state:
        type: string
        description: State of user
      created:
        type: integer
        format: int64
      updated:
        type: integer
        format: int64
      email:
        type: string
      plan:
        type: string
        description: The plan the user (or company) is on. Defaults to standard.
        enum:
          - 'standard'
          - 'premium'
      badgeUrl:
        type: string
        description: Url to an optional badge image.
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      name:
        $ref: '#/definitions/Name'
      avatar:
        $ref: '#/definitions/Avatar'
      relatedUsersUpdated:
        type: integer
        format: int64
      relatedUsers:
        type: array
        description: Related users to current user. Can be users of type business, personal etc.
        items:
          $ref: '#/definitions/UserRelation'
  UserRelation:
    type: object
    required:
      - id
      - type
      - state
      - created
      - name
    properties:
      id:
        type: string
      type:
        type: string
      state:
        type: string
      displayType:
        type: string
      created:
        type: integer
        format: int64
      updated:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/Name'
      avatar:
        $ref: '#/definitions/Avatar'
      current:
        type: boolean
      bankRelation:
        type: string
        enum:
          - dklb
          - dklbb
          - dknb
          - dknbb
          - sepp
          - nopp
          - selb
          - nolb
          - unknown

  PhoneNumber:
    type: object
    required:
      - countryCode
      - number
    properties:
      countryCode:
        type: string
      number:
        type: string
  Name:
    type: object
    required:
      - firstName
      - lastName
      - fullName
      - shortName
    properties:
      firstName:
        type: string
      lastName:
        type: string
      fullName:
        type: string
      shortName:
        type: string
  Avatar:
    type: object
    properties:
      url:
        type: string
      thumbnail:
        type: string
  EmailUpdate:
    type: object
    required:
      - email
    properties:
      email:
        type: string
  PhoneNumberUpdate:
    type: object
    required:
      - phoneNumber
    properties:
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      verificationCode:
        type: string
  ContactPermissionUpdate:
    type: object
    required:
      - type
      - enabled
    properties:
      type:
        type: string
        enum:
          - 'dk'
          - 'se'
          - 'no'
      enabled:
        type: boolean
  AvatarUpdate:
    type: object
    required:
      - avatar
    properties:
      avatar:
        $ref: '#/definitions/Avatar'

securityDefinitions:
  authorizationToken:
    type: apiKey
    description: Require Authorization header for protected endpoints
    name: Authorization
    in: header
parameters:
  Authorization:
    name: Authorization
    in: header
    description: Authorization token
    required: true
    type: string
  XOs:
    name: X-Os
    in: header
    description: OS
    required: false
    type: string
  XDeviceId:
    name: X-DeviceId
    in: header
    description: Device id
    required: true
    type: string
  XDeviceModel:
    name: X-DeviceModel
    in: header
    description: Device model
    required: false
    type: string
  XDeviceManufacturer:
    name: x-DeviceManufacturer
    in: header
    description: Device manufacturer
    required: false
    type: string
  XAppVersion:
    name: X-AppVersion
    in: header
    description: App version
    required: false
    type: string
  XRequestId:
    name: X-RequestId
    in: header
    description: Unique request uuid
    required: false
    type: string
  XLanguage:
    name: X-Language
    in: header
    description: Language
    required: false
    type: string
